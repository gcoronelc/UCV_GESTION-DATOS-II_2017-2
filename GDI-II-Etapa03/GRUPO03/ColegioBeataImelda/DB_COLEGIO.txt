=============================================
-- Creación de la Base de Datos
-- =============================================

DROP DATABASE IF EXISTS COLEGIO;

CREATE DATABASE COLEGIO;


-- =============================================
-- Seleccionar la Base de Datos
-- =============================================

USE COLEGIO;


-- =============================================
-- Tablas
-- =============================================

CREATE TABLE EMPLEADO
(
	IDEMP                INTEGER AUTO_INCREMENT NOT NULL,
	NOMBRE               VARCHAR(60),
	APELLIDO             VARCHAR(60),
	dni                  VARCHAR(20),
	DIRECCION            VARCHAR(150),
	TELEFONO             VARCHAR(40),
	CORREO               VARCHAR(100),
	ESTADO               INTEGER ,
	CONSTRAINT PK_EMPLEADO PRIMARY KEY (IDEMP)
);

CREATE TABLE USUARIO
(
	IDEMP                INTEGER NOT NULL,
	USUARIO              VARCHAR(20) NOT NULL,
	CLAVE                VARCHAR(40) NOT NULL,
	ESTADO               INTEGER NOT NULL,
	CONSTRAINT PK_USUARIO PRIMARY KEY (IDEMP),
	CONSTRAINT FK_USUARIO_EMPLEADO 
		FOREIGN KEY (IDEMP) REFERENCES EMPLEADO (IDEMP)
);




	CREATE TABLE Modulo
(
	int_moducodigo       INTEGER NOT NULL,
	vch_modunombre       VARCHAR(50) NULL,
	vch_moduestado       VARCHAR(15) NOT NULL 
						 DEFAULT 'ACTIVO' 
		                 CHECK ( vch_moduestado IN ('ACTIVO', 'ANULADO', 'CANCELADO') ),
	CONSTRAINT PK_Modulo PRIMARY KEY (int_moducodigo)
) ; 


CREATE TABLE Permiso
(
	IDEMP                INTEGER NOT NULL,
	int_moducodigo       INTEGER NOT NULL,
	vch_permestado       VARCHAR(15) NOT NULL 
	                     DEFAULT 'ACTIVO' 
						 CHECK ( vch_permestado IN ('ACTIVO', 'ANULADO', 'CANCELADO') ),
	CONSTRAINT PK_Permiso PRIMARY KEY (IDEMP,int_moducodigo),
	FOREIGN KEY FK_Permiso_Modulo (IDEMP) REFERENCES Modulo (int_moducodigo),
	FOREIGN KEY FK_Permiso_Usuario (IDEMP) REFERENCES Usuario (IDEMP)
);


-- =============================================
-- Datos
-- =============================================

-- EMPLEADOS

INSERT INTO EMPLEADO VALUES
(1,'NANCY','ALVARADO MIROQUESADA','10844356','SAN ANTONIO','908723451','NANCYMIRO@GMAIL.COM',1);

INSERT INTO EMPLEADO VALUES
(2,'DIEGO','GONGORA AQUIMA','10324567','CHACLACAYO','986754123','diegog@GMAIL.COM',1);

INSERT INTO EMPLEADO VALUES
(3,'JAVIER ALFONSO','BENAVENTE FIGUEROA','78535678','LOS OLIVOS','908943568','JBENAVENTE@GMAIL.COM',0);

INSERT INTO EMPLEADO VALUES
(4,'ANDREA NELIDA','QUIÑONES ROMERO','10674356','MIRAFLORES','909054125','ANDREANE@GMAIL.COM',1);

INSERT INTO EMPLEADO VALUES
(5,'ANGELA LINAS','GUERREROS BRAVO','10674355','LINCE','895467236','ANGELALI@GMAIL.COM',1);


-- USUARIO

INSERT INTO USUARIO VALUES(1,'nancy',SHA('nancy'),1);
INSERT INTO USUARIO VALUES(2,'diego',SHA('diego'),1);
INSERT INTO USUARIO VALUES(3,'javier',SHA('javier'),0);
INSERT INTO USUARIO VALUES(4,'andrea',SHA('andrea'),1);
INSERT INTO USUARIO VALUES(5,'angela',SHA('angela'),1);

-- ROLES

--INSERT INTO ROL VALUES(1,'ADMINISTRADOR','Tiene acceso a todos los módulos.',1);
--INSERT INTO ROL VALUES(2,'VENTAS','No tiene acceso a los modulos de ventas y consultas.',1);
--INSERT INTO ROL VALUES(3,'OPERADOR','No tiene acceso a los modulos de planificación, consultas y reportes.',1);
--INSERT INTO ROL VALUES(4,'USUARIO','Solo tiene acceso al modulo de consultas y reportes.',1);

INSERT INTO Modulo VALUES( 1, 'Procesos', 'ACTIVO');
INSERT INTO Modulo VALUES( 2, 'Tablas', 'ACTIVO');
INSERT INTO Modulo VALUES( 3, 'Consultas', 'ACTIVO');
INSERT INTO Modulo VALUES( 4, 'Reportes', 'ACTIVO');
INSERT INTO Modulo VALUES( 5, 'Util', 'ACTIVO');
INSERT INTO Modulo VALUES( 6, 'Seguridad', 'ACTIVO');

-- PERMISOS

-- USUARIO 1
INSERT INTO Permiso VALUES( 1, 1, 'CANCELADO');
INSERT INTO Permiso VALUES( 1, 2, 'ACTIVO');
INSERT INTO Permiso VALUES( 1, 3, 'ACTIVO');
INSERT INTO Permiso VALUES( 1, 4, 'ACTIVO');
INSERT INTO Permiso VALUES( 1, 5, 'CANCELADO');
INSERT INTO Permiso VALUES( 1, 6, 'CANCELADO');

-- USUARIO 2
INSERT INTO Permiso VALUES( 2, 1, 'ACTIVO');
INSERT INTO Permiso VALUES( 2, 2, 'ACTIVO');
INSERT INTO Permiso VALUES( 2, 3, 'ACTIVO');
INSERT INTO Permiso VALUES( 2, 4, 'ACTIVO');
INSERT INTO Permiso VALUES( 2, 5, 'CANCELADO');
INSERT INTO Permiso VALUES( 2, 6, 'CANCELADO');



-- =============================================
-- Usuario de MySQL
-- =============================================




SHOW TABLES;


-- ===========================
-- CREACION DE TABLAS
-- ===========================

CREATE TABLE NIVEL
(
	IDNIVEL              INTEGER NOT NULL,
	NOMBRE               VARCHAR(50) NOT NULL,
	CONSTRAINT PK_NIVEL PRIMARY KEY (IDNIVEL)
);



CREATE TABLE GRADO
(
	IDNIVEL              INTEGER NOT NULL,
	IDGRADO              INTEGER NOT NULL,	
	NOMBRE               VARCHAR(50) NOT NULL,
	CONSTRAINT PK_GRADO PRIMARY KEY (IDNIVEL,IDGRADO),
	FOREIGN KEY FK_GRADO_NIVEL (IDNIVEL) REFERENCES NIVEL (IDNIVEL)
);



CREATE TABLE AULA
(
	IDAULA               INTEGER AUTO_INCREMENT,
	NOMBRE               VARCHAR(50) NOT NULL,
	PISO                 INTEGER NOT NULL,
	NUMERO               INTEGER NOT NULL,
	CAPACIDAD            INTEGER NOT NULL,
	CONSTRAINT PK_AULA PRIMARY KEY (IDAULA)
);



CREATE TABLE PERIODO
(
	PERIODO              INTEGER NOT NULL,
	NOMBRE               VARCHAR(200) NOT NULL,
	INGRESO              NUMERIC(12,2) NOT NULL,
	MATRICULA            NUMERIC(12,2) NOT NULL,
	CUOTA_NEW            NUMERIC(12,2) NULL,
	CUOTA_OLD            NUMERIC(12,2) NOT NULL,
	MORA                 NUMERIC(12,2) NOT NULL,
	HINGRESO             VARCHAR(10) NOT NULL,
	HSALIDA              VARCHAR(10) NOT NULL,
	CONSTRAINT PK_PERIODO PRIMARY KEY (PERIODO)
);



CREATE TABLE SECCION
(
	IDSECCION            INTEGER AUTO_INCREMENT,
	IDNIVEL              INTEGER NOT NULL,
	IDGRADO              INTEGER NOT NULL,	
	IDAULA               INTEGER NOT NULL,
	PERIODO              INTEGER NOT NULL,
	CONSTRAINT PK_SECCION PRIMARY KEY (IDSECCION),
	FOREIGN KEY FK_SECCION_GRADO (IDNIVEL, IDGRADO) REFERENCES GRADO (IDNIVEL, IDGRADO),
	FOREIGN KEY FK_SECCION_AULA (IDAULA) REFERENCES AULA (IDAULA),
	FOREIGN KEY FK_SECCION_PERIODO (PERIODO) REFERENCES PERIODO (PERIODO)
);


-- ===========================
-- DATOS
-- ===========================

-- NIVELES

INSERT INTO NIVEL VALUES
(1, 'NIVEL PRIMARIO'),
(2, 'NIVEL SECUNDARIO');

-- GRADOS

INSERT INTO GRADO VALUES
(1,1,'GRADO 1'),
(1,2,'GRADO 2'),
(1,3,'GRADO 3'),
(1,4,'GRADO 4'),
(1,5,'GRADO 5'),
(1,6,'GRADO 6'),
(2,1,'GRADO 1'),
(2,2,'GRADO 2'),
(2,3,'GRADO 3'),
(2,4,'GRADO 4'),
(2,5,'GRADO 5');


-- AULAS

INSERT INTO AULA VALUES
(1,'AULA 101',1,101,20),
(2,'AULA 102',1,102,20),
(3,'AULA 103',1,103,20),
(4,'AULA 104',1,104,20),
(5,'AULA 105',1,105,20),
(6,'AULA 106',1,106,20),
(7,'AULA 107',1,107,20),
(8,'AULA 201',2,201,30),
(9,'AULA 202',2,202,30),
(10,'AULA 203',2,203,30),
(11,'AULA 204',2,204,30),
(12,'AULA 205',2,205,30),
(13,'AULA 206',2,206,30),
(14,'AULA 207',2,207,30);

-- PERIODOS

INSERT INTO PERIODO VALUES
(2014,'AÑO DEL LOGRO',1200.0, 1000.0, 700.0, 500.0, 1, '7:45H','15:15H'),
(2015,'AÑO DEL LA CONSOLIDACION',1400.0, 1200.0, 800.0, 700.0, 1, '7:45H','15:15H');


-- SECCIONES

INSERT INTO SECCION(IDSECCION,IDNIVEL,IDGRADO,IDAULA,PERIODO) VALUES 
(1,1,1,1,2014),
(2,1,2,2,2014),
(3,1,3,3,2014),
(4,1,1,1,2015),
(5,1,2,2,2015),
(6,1,3,3,2015),
(7,1,4,4,2015);



-- ===========================
-- CREACION DE TABLAS
-- ===========================


CREATE TABLE TIPO_PAGO
(
	IDTIPO               INTEGER NOT NULL,
	NOMBRE               VARCHAR(50) NOT NULL,
	CONSTRAINT PK_TIPO_PAGO PRIMARY KEY (IDTIPO)
);



CREATE TABLE ESTUDIANTE
(
	IDEST                INTEGER AUTO_INCREMENT,
	APELLIDO             VARCHAR(60) NOT NULL,
	NOMBRE               VARCHAR(60) NOT NULL,
	DNI                  VARCHAR(20) NOT NULL,
	DIRECCION            VARCHAR(200) NOT NULL,
	CORREO               VARCHAR(100) NOT NULL,
	APONOMBRE            VARCHAR(100) NOT NULL,
	APOCORREO            VARCHAR(100) NOT NULL,
	APOTELEFONO          VARCHAR(20) NOT NULL,
	CONSTRAINT PK_ESTUDIANTE PRIMARY KEY (IDEST)
);



CREATE TABLE MATRICULA
(
	IDMAT                INTEGER AUTO_INCREMENT,
	IDEMP                INTEGER NOT NULL,
	IDEST                INTEGER NOT NULL,
	IDSECCION            INTEGER NOT NULL,
	FECHA                DATE NOT NULL,
	ESTADO               INTEGER NULL,
	CONSTRAINT PK_MATRICULA PRIMARY KEY (IDMAT),
	FOREIGN KEY FK_MATRICULA_SECCION (IDSECCION) REFERENCES SECCION (IDSECCION),
	FOREIGN KEY FK_MATRICULA_ESTUDIANTE (IDEST) REFERENCES ESTUDIANTE (IDEST),
	FOREIGN KEY FK_MATRICULA_USUARIO (IDEMP) REFERENCES USUARIO (IDEMP)
);



CREATE TABLE PAGO
(
	IDPAGO               INTEGER AUTO_INCREMENT,
	IDMAT                INTEGER NOT NULL,
	IDTIPO               INTEGER NOT NULL,
	EMPGENPAGO           INTEGER NOT NULL,
	EMPREGPAGO           INTEGER NULL,
	FECVENC              DATE NOT NULL,
	FECPAGO              DATE NULL,
	IMPORTE              NUMERIC(12,2) NOT NULL,
	MORA                 NUMERIC(12,2) NOT NULL,
	TOTAL                NUMERIC(10,2) NOT NULL,
	PENDIENTE            INTEGER NOT NULL,
	BOLSERIE             INTEGER NULL,
	BOLNRO               INTEGER NULL,
	CONSTRAINT PK_PAGO PRIMARY KEY (IDPAGO),
	FOREIGN KEY FK_PAGO_TIPO_PAGO (IDTIPO) REFERENCES TIPO_PAGO (IDTIPO),
	FOREIGN KEY FK_PAGO_MATRICULA (IDMAT) REFERENCES MATRICULA (IDMAT),
	FOREIGN KEY FK_PAGO_USUARIO_GEN (EMPGENPAGO) REFERENCES USUARIO (IDEMP),
	FOREIGN KEY FK_PAGO_USUARIO_REG (EMPREGPAGO) REFERENCES USUARIO (IDEMP)
);



CREATE UNIQUE INDEX U_PAGO ON PAGO
(
	IDMAT,
	IDTIPO
);

-- ===========================
-- CARGA DE DATOS
-- ===========================

INSERT INTO ESTUDIANTE VALUES
(1,'BAHAMONDE ROMERO','NOE TORIOBIO','46782345','LA MOLINA','BAHAMONDE@GMAIL.COM','BAHAMONDE, PIERO','PERITO@GMAIL.COM','784356872'),
(2,'MALDONADO JIMENEZ','PABLO ENRIQUE','48345678','STA EULALIA','PABLOMAJI@GMAIL.COM','MALDONADO, MARCOS','MARKMALDONADO@GMAIL.COM','9558956435'),
(3,'ZUÑIGA HUARAQUITA','KENNY SMITH','45546723','ATE','KENNY@GMAIL.COM','ZUÑIGA, JUAN','JUANZR@GMAIL.COM','5406578234'),
(4,'SOTO CHILENO','JHEAN CARLOS','43963514','LA VICTORIA','JHEANZ@GMAIL.COM','SOTO, MARIO','MARIO@GMAIL.COM','436734567');





INSERT INTO TIPO_PAGO(IDTIPO,NOMBRE) VALUES
(1, 'CUOTA DE INGRESO'),
(2, 'CUOTA DE MATRICULA'),
(3, 'CUOTA DE MARZO'),
(4, 'CUOTA DE ABRIL'),
(5, 'CUOTA DE MAYO'),
(6, 'CUOTA DE JUNIO'),
(7, 'CUOTA DE JULIO'),
(8, 'CUOTA DE AGOSTO'),
(9, 'CUOTA DE SETIEMBRE'),
(10, 'CUOTA DE OCTUBRE'),
(11, 'CUOTA DE NOVIEMBRE'),
(12, 'CUOTA DE DICIEMBRE');

CREATE TABLE Contador (
	vch_conttabla        VARCHAR(30) NOT NULL,
	int_contitem         INTEGER NOT NULL,
	int_contlongitud     INTEGER NOT NULL,
	CONSTRAINT PK_Contador 
		PRIMARY KEY (vch_conttabla)
);

insert into Contador Values( 'empleado', 5, 2 );
insert into Contador Values( 'estudiante', 5, 3 );
insert into Contador Values( 'usuario', 5, 4 );
insert into Contador Values( 'seccion', 5, 6 );

CREATE VIEW V_MATRICULADOS
(IDSECCION, MATRICULADOS)
AS
SELECT S.IDSECCION, COUNT(M.IDSECCION) MATRICULADOS
FROM SECCION S 
LEFT JOIN MATRICULA M ON S.IDSECCION = M.IDSECCION
GROUP BY S.IDSECCION;
	


CREATE VIEW V_SECCION
( 
  IDSECCION, PERIODO, NIVEL, GRADO, INGRESO, MATRICULA, 
  NEWCUOTA, OLDCUOTA, PISO, AULA, CAPACIDAD, MATRICULADOS
)
AS
SELECT 
   S.IDSECCION, P.PERIODO, N.NOMBRE, G.NOMBRE, P.INGRESO,
   P.MATRICULA, P.CUOTA_NEW, P.CUOTA_OLD, A.PISO, 
   A.NOMBRE, A.CAPACIDAD, M.MATRICULADOS
FROM NIVEL   N
JOIN GRADO   G ON N.IDNIVEL = G.IDNIVEL
JOIN SECCION S ON G.IDNIVEL = S.IDNIVEL AND G.IDGRADO = S.IDGRADO
JOIN PERIODO P ON S.PERIODO = P.PERIODO
JOIN AULA    A ON S.IDAULA = A.IDAULA
JOIN V_MATRICULADOS M ON S.IDSECCION = M.IDSECCION;	





USE MYSQL;
GRANT ALL PRIVILEGES ON *.* TO 'colegio'@'%' IDENTIFIED BY 'admin' WITH GRANT OPTION;
FLUSH PRIVILEGES;

GRANT ALL PRIVILEGES ON *.* TO 'colegio'@'localhost' IDENTIFIED BY 'admin' WITH GRANT OPTION;
FLUSH PRIVILEGES;

USE COLEGIO;
	